import turtle

window = turtle.Screen()
window.title("Pong for one")
window.bgcolor("grey")
window.setup(800, 500)
window.tracer(0)
score_counter = 0
misses_counter = 0
best_score_counter = 0

# Score counter
score = turtle.Turtle()
score.speed(0)
score.color("black")
score.penup()
score.hideturtle()
score.goto(0, 200)
score.write(f"Score: 0", align="center", font=("Courier", 22, "normal"))

# "Best score" counter
best_score = turtle.Turtle()
best_score.speed(0)
best_score.color("black")
best_score.penup()
best_score.hideturtle()
best_score.goto(-260, 200)

# "Lives left" sign
lives_sign = turtle.Turtle()
lives_sign.speed(0)
lives_sign.color("black")
lives_sign.penup()
lives_sign.hideturtle()
lives_sign.goto(230, 200)
lives_sign.write("Lives left: ", align="center", font=("Courier", 22, "normal"))

# "Game over sign"
over_sign = turtle.Turtle()
over_sign.speed(0)
over_sign.penup()
over_sign.hideturtle()

# Paddle
paddle = turtle.Turtle()
paddle.color("white")
paddle.shape("square")
paddle.speed(0)
paddle.penup()
paddle.shapesize(1, 7)
paddle.goto(0, -200)

# Ball
ball = turtle.Turtle()
ball.color("yellow")
ball.shape("circle")
ball.speed(0)
ball.penup()
ball.shapesize(1, 1)
ball.dx = 0.15
ball.dy = 0.15

# Live one
live_1 = turtle.Turtle()
live_1.penup()
live_1.color("red")
live_1.goto(200, 185)
live_1.shapesize(2, 2)

# Live two
live_2 = turtle.Turtle()
live_2.penup()
live_2.color("red")
live_2.goto(230, 185)
live_2.shapesize(2, 2)

# Live three
live_3 = turtle.Turtle()
live_3.penup()
live_3.color("red")
live_3.goto(260, 185)
live_3.shapesize(2, 2)

# Function


def paddle_left():
    x = paddle.xcor()
    x -= 20
    paddle.setx(x)


def paddle_right():
    x = paddle.xcor()
    x += 20
    paddle.setx(x)

# Paddle movement


window.listen()
window.onkeypress(paddle_left, "Left")
window.onkeypress(paddle_right, "Right")

# if paddle.xcor() > 330:
#     paddle.goto(330, -210)
#  I have to fix the disappearing paddle

# Main game loop
while True:
    window.update()

    # Ball movement
    ball.setx(ball.xcor() + ball.dx)
    ball.sety(ball.ycor() + ball.dy)

    # Boarder checking:
    # Upper
    if ball.ycor() > 240:
        ball.sety(240)
        ball.dy *= -1
    # Lower
    elif ball.ycor() < -240:
        ball.goto(0, 0)
        ball.dy *= -1
        score_counter = 0
        score.clear()
        misses_counter += 1
        score.write(f"Score: {score_counter}", align="center", font=("Courier", 22, "normal"))
    # Right
    elif ball.xcor() > 385:
        ball.setx(385)
        ball.dx *= -1
    # Left
    elif ball.xcor() < -385:
        ball.setx(-385)
        ball.dx *= -1

    # Misses counting and removing lives from the bar
    if misses_counter == 1:
        live_3.color("grey")
    elif misses_counter == 2:
        live_2.color("grey")
    elif misses_counter == 3:
        live_1.color("grey")

    # "Game over" function
    if misses_counter >= 3:
        over_sign.clear()
        over_sign.color("black")
        over_sign.write("Game over!", align="center", font=("Courier", 30, "normal"))
        ball.color("grey")
        best_score.write(f"Best score: {best_score_counter}", align="center", font=("Courier", 22, "normal"))

    # Paddle and ball collisions
    if (-180 > ball.ycor() > -190) and (paddle.xcor() + 70 > ball.xcor() > paddle.xcor() - 70):
        ball.sety(-180)
        ball.dy *= -1
        score_counter += 1
        score.clear()
        score.write(f"Score: {score_counter}", align="center", font=("Courier", 22, "normal"))
        if score_counter % 5 == 0:
            ball.dx += 0.02
            ball.dy += 0.02

    # "Best score" function
    if score_counter > best_score_counter:
        best_score_counter = score_counter
        best_score.clear()

