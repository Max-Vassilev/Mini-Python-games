import turtle
import random
import time

delay = 0.1
segments = []
score = 0
best_score = 0

# Window
window = turtle.Screen()
window.setup(width=500, height=500)
window.bgcolor("green")
window.tracer(0)

# Line
line = turtle.Turtle()
line.speed(0)
line.shape("square")
line.color("white")
line.shapesize(0.05, 250)
line.penup()
line.goto(0, 170)

# Head
head = turtle.Turtle()
head.shape("square")
head.color("black")
head.speed(0)
head.goto(0, 0)
head.penup()
head.direction = "stop"

# Food
food = turtle.Turtle()
food.penup()
food.shape("circle")
food.color("red")
food.speed(0)
food.goto(0, 150)

# Score sign
sign = turtle.Turtle()
sign.color("white")
sign.penup()
sign.hideturtle()
sign.speed(0)
sign.goto(0, 190)
sign.write(f"Best score: 0  Score: 0", align="center", font=("Courier", 22, "normal"))


# Functions


def move_up():
    if head.direction != "down":
        head.direction = "up"


def move_down():
    if head.direction != "up":
        head.direction = "down"


def move_left():
    if head.direction != "right":
        head.direction = "left"


def move_right():
    if head.direction != "left":
        head.direction = "right"


def move():
    if head.direction == "up":
        y_up = head.ycor()
        y_up += 20
        head.sety(y_up)
    elif head.direction == "down":
        y_down = head.ycor()
        y_down -= 20
        head.sety(y_down)
    elif head.direction == "left":
        x_left = head.xcor()
        x_left -= 20
        head.setx(x_left)
    elif head.direction == "right":
        x_right = head.xcor()
        x_right += 20
        head.setx(x_right)

# Move commands


turtle.listen()
turtle.onkeypress(move_up, "w")
turtle.onkeypress(move_down, "s")
turtle.onkeypress(move_left, "a")
turtle.onkeypress(move_right, "d")


# Main game loop
while True:
    window.update()

    time.sleep(delay)

    # Check for collisions with the head and the food
    if head.distance(food) < 20:
        x = random.randint(-230, 230)
        y = random.randint(-230, 150)
        food.goto(x, y)

        # Adding new segment
        new_segment = turtle.Turtle()
        new_segment.shape("square")
        new_segment.color("yellow")
        new_segment.speed(0)
        new_segment.penup()
        segments.append(new_segment)

        # Adding a point to the score
        score += 1

        # Checking if the current score is the best
        if score > best_score:
            best_score = score

        # Printing the right scores
        sign.clear()
        sign.write(f"Best score: {best_score}  Score: {score}", align="center", font=("Courier", 22, "normal"))

    # Check for collisions with the head and the body
    for segment in segments:
        if segment.distance(head) < 20:
            time.sleep(1)
            head.goto(0, 0)
            score = 0
            sign.clear()
            sign.write(f"Best score: {best_score}  Score: {score}", align="center", font=("Courier", 22, "normal"))

            head.direction = "stop"
            for i in segments:
                i.goto(1000, 1000)
            segments.clear()

    # Check for collisions with the boarder
    if head.xcor() > 240 or head.xcor() < -240 or head.ycor() > 160 or head. ycor() < -240:
        time.sleep(1)
        head.goto(0, 0)
        score = 0
        sign.clear()
        sign.write(f"Best score: {best_score}  Score: {score}", align="center", font=("Courier", 22, "normal"))
        head.direction = "stop"
        for i in segments:
            i.goto(1000, 1000)
        segments.clear()

    # Moving the segments
    if len(segments) > 0:
        for i in range(len(segments)-1, 0, -1):
            x = segments[i-1].xcor()
            y = segments[i-1].ycor()
            segments[i].goto(x, y)
        x = head.xcor()
        y = head.ycor()
        segments[0].goto(x, y)

    move()
